name: Continious Integration

on: 
  push: 
    branches: 
      - main
      - development
    paths:
      - 'nginx/**'
      - '.github/workflows/ci.yaml'
env:
  repo: mykalmachon/observable-nginx

jobs:
  build:
    name: Building
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: 'Login to GitHub Container Registry'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{github.actor}}
        password: ${{secrets.GITHUB_TOKEN}}
    
    - name: Build and push NGINX image
      uses: docker/build-push-action@v6  
      with:
        context: .
        file: ./nginx/dockerfile
        push: true
        tags: ghcr.io/${{ env.repo }}:${{ github.sha }}, ghcr.io/${{ env.repo }}:${{ github.ref_name }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
  test: 
    name: Testing
    runs-on: ubuntu-latest 
    needs: build

    steps:
    - name: Pull NGINX image 
      run: docker pull ghcr.io/${{ env.repo }}:${{ github.sha }}

    - name: Create self-signed SSL certificate
      run: openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /tmp/nginx.key -out /tmp/nginx.pem -subj "/C=CA/ST=BC/L=Vancouver/O=MykalMachon/CN=localhost"

    - name: Run NGINX container
      run: docker run -d -p 443:443 -v /tmp/nginx.pem:/etc/nginx/ssl/nginx.pem -v /tmp/nginx.key:/etc/nginx/ssl/nginx.key ghcr.io/${{ env.repo }}:${{ github.sha }}

    - name: Wait for NGINX container to start
      run: sleep 5

    - name: Test NGINX container
      id: test-nginx
      run: |
        bash -c '
        response=$(curl -k -s -o /dev/null -w "%{http_code}" https://127.0.0.1)
        if [ "$response" -eq 200 ]; then
          echo "ALIVE=true" >> "$GITHUB_OUTPUT"
          echo "RESPONSE=$response" >> "$GITHUB_OUTPUT"
        else
          echo "ALIVE=false" >> "$GITHUB_OUTPUT"
          echo "RESPONSE=$response" >> "$GITHUB_OUTPUT"
        fi
        '
    
    - name: Stop NGINX container
      run: docker stop $(docker ps -q --filter ancestor=ghcr.io/${{ env.repo }}:${{ github.sha }})

    - name: Remove NGINX container
      run: docker rm $(docker ps -a -q --filter ancestor=ghcr.io/${{ env.repo }}:${{ github.sha }})
    
    - name: Publish test results 
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
            github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'Healthcheck',
              head_sha: context.sha,
              status: 'completed',
              conclusion: `${{ steps.test-nginx.outputs.alive == 'true' && 'success' || 'failure' }}`,
              output: {
                title: `NGINX Container Healthcheck: ${{ steps.test-nginx.outputs.alive == 'true' && 'Passed' || 'Failed' }}`,
                summary: '${{ steps.test-nginx.outputs.alive == 'true' && 'The NGINX container responded to requests' || 'The NGINX container failed to come up properly or did not respond to requests.' }}'
              }
            })




