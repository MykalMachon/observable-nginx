services:
  nginx:
    build:
      context: .
      dockerfile: ./nginx/dockerfile
    container_name: nginx
    volumes:
      # NGINX specific config
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled:ro
      - ./nginx/conf:/etc/nginx/conf.d:ro
      - ./nginx/static:/var/www/:ro
      # shared resources
      - ./shared/ssl:/etc/nginx/ssl:ro
      - ./shared/logs:/var/log/nginx/:wo
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped

  prometheus_exporter:
    image: nginx/nginx-prometheus-exporter:1.3.0
    container_name: nginx_prometheus_exporter
    volumes:
      - ./shared/ssl/:/etc/prometheus/ssl/
      - type: bind
        source: ./prometheus/config.yaml
        target: /etc/prometheus/config.yaml
        read_only: true
    command: --nginx.scrape-uri=http://nginx:8080/status --web.config.file="/etc/prometheus/config.yaml"
    ports:
      - 9113:9113
    restart: always
    depends_on:
      - nginx

  promtail:
    image: grafana/promtail:3.2.0
    container_name: nginx_promtail
    env_file:
      - ./promtail/promtail.env
    volumes:
      - ./shared/logs/:/mnt/logs/:ro
      - type: bind
        source: ./promtail/config.yaml
        target: /etc/promtail/config.yaml
        read_only: true
    command: -config.file=/etc/promtail/config.yaml -config.expand-env=true
    ports:
      - 9080:9080
    restart: always
    depends_on:
      - nginx